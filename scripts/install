#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

ynh_abort_if_errors	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
is_public=$YNH_APP_ARG_IS_PUBLIC
path_url=$YNH_APP_ARG_PATH

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

if sudo yunohost domain list | grep -q $domain	# Vérifie la liste des domaines
then	# Si le domaine existe dans Yunohost
	if sudo yunohost app map | grep -q $domain	# Vérifie la liste des apps par domaine
	then 	# Si une app est installée sur ce domaine.
		WARNING echo "An app is already installed on the domain $domain. cryptpad needs a whole domain or subdomain to himself."
	fi
fi

path_url=$(ynh_normalize_url_path $path_url)	# Check and normalize path
CHECK_DOMAINPATH	# Vérifie la disponibilité du path et du domaine.
CHECK_FINALPATH	# Vérifie que le dossier de destination n'est pas déjà utilisé.

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set $app domain "$domain"
ynh_app_setting_set $app is_public "$is_public"
ynh_app_setting_set $app path_url "$path_url"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================

port=$(ynh_find_port 3000)	# Cherche un port libre.
ynh_app_setting_set $app port $port

#=================================================
# INSTALL NODEJS
#=================================================

ynh_install_nodejs $NODEJS_VERSION

#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_system_user_create $app

#=================================================
# SPECIFIC SETUP
#=================================================
# HANDLE LOG FILES AND LOGROTATE
#=================================================

# Créer le dossier de log
sudo mkdir -p /var/log/$app
sudo touch /var/log/$app/$app.log
sudo chown $app -R /var/log/$app

# Setup logrotate
ynh_use_logrotate

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

final_path=/var/www/$app
ynh_app_setting_set $app final_path $final_path
ynh_setup_source $final_path

# Set files ownership during installation
sudo chown $app: $final_path -R
sudo chmod 755 $final_path -R

#=================================================
# Modify Nginx configuration file and copy it to Nginx conf directory
#=================================================

ynh_nginx_config

#=================================================
# ADD SYSTEMD SERVICE
#=================================================

ynh_replace_string "__NODE__" "$nodejs_path" "../conf/systemd.service"
ynh_replace_string "__NODEJS__" "$nodejs_use_version" "../conf/systemd.service"
ynh_replace_string "__ENV_PATH__" "$PATH" "../conf/systemd.service"
ynh_systemd_config


#=================================================
# INSTALL CRYPTPAD
#=================================================

script_dir="$PWD"
pushd "$final_path"
sudo chown -R $app: $final_path
sudo_path npm install
sudo_path npm install -g bower
sudo su -l $app -s /bin/bash -c "cd $final_path && env PATH=$PATH bower install"
popd

#=================================================
# CONFIGURE SERVER.JS	
#=================================================

# Copy default configuration file
sudo mv "$final_path/config.example.js" "$final_path/config.js"

# Set service port
ynh_replace_string "httpPort: 3000" "httpPort: $port" "$final_path/config.js"
# Tune CSP to allow for YunoHost tile
ynh_replace_string "\"script-src 'self'\"" "\"script-src 'self' 'unsafe-eval'\"" "$final_path/config.js"
# Remove donate button
ynh_replace_string "removeDonateButton: false" "removeDonateButton: true" "$final_path/config.js"
# Disable analytics unsolicited communications
ynh_replace_string "adminEmail: 'i.did.not.read.my.config@cryptpad.fr'" "adminEmail: false" "$final_path/config.js"

# Store file checksum to detected user modifications on upgrade
ynh_store_file_checksum "$final_path/config.js"

#=================================================
# SET FILES OWNERSHIP
#=================================================

sudo chown -R root: $final_path
sudo mkdir $final_path/datastore $final_path/pins $final_path/blob $final_path/blobstage
sudo chown -R $app: $final_path/datastore $final_path/pins $final_path/blob $final_path/blobstage

#=================================================
# INSTALL MODULES FOR CRYPTPAD
#=================================================

#npm install cryptpad-level-store;

#=================================================
# ENABLE SERVICE IN ADMIN PANEL
#=================================================

# Ajoute le service au monitoring de Yunohost.
sudo yunohost service add $app --log "/var/log/$app/$app.log"

#=================================================
# START CRYPTPAD IN BACKGROUND
#=================================================

sudo systemctl start $app

#=================================================
# SETUP SSOWAT
#=================================================

if [ $is_public -eq 1 ];
then
  ynh_app_setting_set "$app" unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================

sudo systemctl reload nginx
